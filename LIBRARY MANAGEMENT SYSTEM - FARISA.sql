CREATE DATABASE LIBRARY;
USE LIBRARY;

CREATE TABLE BRANCH ( BRANCH_NO INT PRIMARY KEY, MANAGER_ID INT, 
BRANCH_ADDRESS VARCHAR(25), CONTACT_NO VARCHAR(20));

INSERT INTO BRANCH (BRANCH_NO, MANAGER_ID, BRANCH_ADDRESS, CONTACT_NO) VALUES
    (1, 101, 'TOWN A', '5512434'),
    (2, 102, 'TOWN B', '5935678'),
    (3, 103, 'TOWN C', '7379012'),
    (4, 104, 'TOWN D', '8363456'),
    (5, 105, 'TOWN E', '6578490');
    
    
    CREATE TABLE EMPLOYEE (EMP_ID INT PRIMARY KEY, EMP_NAME VARCHAR(25) NOT NULL, 
    POSITION VARCHAR(25), SALARY DECIMAL(10, 2), 
    BRANCH_NO INT, FOREIGN KEY (BRANCH_NO) REFERENCES BRANCH(BRANCH_NO));

  INSERT INTO EMPLOYEE (EMP_ID, EMP_NAME, POSITION, SALARY, BRANCH_NO) VALUES
    (101, 'JOHN', 'MANAGER', 50000.00, 1),
    (102, 'PETER', 'EXECUTIVE', 40000.00, 2),
    (103, 'EMILY', 'HRM', 30000.00, 1),
    (104, 'SARA', 'ACCOUNTANT ', 35000.00, 3),
    (105, 'ROBBY', 'ADMINISTRATOR', 32000.00, 2);
    
    
   CREATE TABLE BOOKS (ISBN VARCHAR(20) PRIMARY KEY, BOOK_TITLE VARCHAR(25) NOT NULL,
   CATEGORY VARCHAR(10), RENTAL_PRICE DECIMAL(10, 2), STATUS ENUM('YES', 'NO') DEFAULT 'YES', 
   AUTHOR VARCHAR(100), PUBLISHER VARCHAR(100)); 
   
    INSERT INTO BOOKS (ISBN, BOOK_TITLE, CATEGORY, RENTAL_PRICE, STATUS, AUTHOR, PUBLISHER) VALUES
    ('140', 'TILL YOUR LAST BREATH', 'FICTION', 10, 'YES', 'DURJOY DATTA', 'PENGUIN'),
    ('141', 'HUNGER GAMES', 'ADVENTURE', 12, 'NO', 'SUZZANE COLLINS', 'SCHOLASTIC'),
    ('142', 'HARRY POTTER', 'FANTASY', 11, 'YES', 'JK ROWLING', 'BLOOMSBURRY'),
    ('143', 'TELL ME YOUR DREAMS', 'MYSTERY', 9, 'NO', 'SYDNEY SHELDON', 'WILLIAM MORROW'),
    ('144', 'THE DAVINCI CODE', 'MYSTERY', 18, 'YES', 'DAN BROWN', 'ANCHOR');
    
    
    
    CREATE TABLE CUSTOMER (CUSTOMER_ID INT PRIMARY KEY, CUSTOMER_NAME VARCHAR(20) NOT NULL,
    CUSTOMER_ADDRESS VARCHAR(25), REG_DATE DATE);
    INSERT INTO CUSTOMER (CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_ADDRESS, REG_DATE) VALUES
    (201, 'ALICE ', 'CITY A', '2023-01-15'),
    (202, 'SMITH', 'CITY B', '2023-02-20'),
    (203, 'LILLY', 'CITY C', '2023-03-10'),
    (204, 'DAVIS', 'CITY D', '2023-04-05'),
    (205, 'EDWARD','CITY E', '2023-05-12');
    
    
    
    CREATE TABLE ISSUESTATUS (ISSUE_ID INT PRIMARY KEY, 
    ISSUED_CUST INT,FOREIGN KEY (ISSUED_CUST) REFERENCES CUSTOMER(CUSTOMER_ID),
    ISSUED_BOOK_NAME VARCHAR(25), ISSUE_DATE DATE,
    ISBN_BOOK VARCHAR(20), FOREIGN KEY (ISBN_BOOK) REFERENCES BOOKS(ISBN));
    
    INSERT INTO ISSUESTATUS (ISSUE_ID, ISSUED_CUST, ISSUED_BOOK_NAME, ISSUE_DATE, ISBN_BOOK) VALUES
    (1, 201, 'HARRY POTTER', '2024-03-22', '141'),
    (2, 202, 'EMMA', '2024-05-21', '140'),
    (3, 203, 'LITTLE WOMAN', '2024-04-20', '144'),
    (4, 204, 'PRIDE AND PREJUDICE', '2024-06-19', '142'),
    (5, 205, 'ALICE IN WONDERLAND', '2024-07-18', '143');
    
    
    
    CREATE TABLE RETURNSTATUS (RETURN_ID INT PRIMARY KEY, 
    RETURN_CUST INT, FOREIGN KEY (RETURN_CUST) REFERENCES CUSTOMER(CUSTOMER_ID),
    RETURN_BOOK_NAME VARCHAR(25), RETURN_DATE DATE, 
    ISBN_BOOK2 VARCHAR(20), FOREIGN KEY (ISBN_BOOK2) REFERENCES BOOKS(ISBN));
    
    INSERT INTO RETURNSTATUS (RETURN_ID, RETURN_CUST, RETURN_BOOK_NAME, RETURN_DATE, ISBN_BOOK2) VALUES
    (1, 201, 'TILL YOUR LAST BREATH', '2024-07-25', '140'),
    (2, 202, 'HUNGER GAMES', '2024-07-24', '141'),
    (3, 203, 'HARRY POTTER', '2024-07-23', '142'),
    (4, 204, 'TELL ME YOUR DREAMS', '2024-07-22', '143'),
    (5, 205, 'THE DAVINCI CODE', '2024-07-21', '144');
    
SELECT * FROM BRANCH;
SELECT * FROM EMPLOYEE;
SELECT * FROM BOOKS;
SELECT * FROM CUSTOMER;
SELECT * FROM ISSUESTATUS;
SELECT * FROM RETURNSTATUS;

-- 1. Retrieve the book title, category, and rental price of all available books. 
SELECT BOOK_TITLE, CATEGORY, RENTAL_PRICE FROM BOOKS WHERE STATUS = 'YES';

-- 2. List the employee names and their respective salaries in descending order of salary. 
SELECT EMP_NAME, SALARY FROM EMPLOYEE ORDER BY SALARY DESC;

-- 3. Retrieve the book titles and the corresponding customers who have issued those books.
SELECT BOOKS.BOOK_TITLE, CUSTOMER.CUSTOMER_NAME FROM BOOKS
JOIN ISSUESTATUS ON BOOKS.ISBN = ISSUESTATUS.ISBN_BOOK
JOIN CUSTOMER ON ISSUESTATUS.ISSUED_CUST = CUSTOMER.CUSTOMER_ID;
    
  -- 4. Display the total count of books in each category.   
    SELECT CATEGORY, COUNT(*) AS _TOTAL_NO_OF_BOOKS FROM BOOKS
    GROUP BY CATEGORY;
    
    -- 5. Retrieve the employee names and their positions for the employees whose salaries are above Rs.50,000.
    SELECT EMP_NAME, POSITION FROM EMPLOYEE WHERE SALARY > 50000;
    -- (NO EMPLOYEES ABOVE 50K)
    SELECT EMP_NAME, POSITION FROM EMPLOYEE WHERE SALARY < 50000;

    -- 6. List the customer names who registered before 2022-01-01 and have not issued any books yet. 
    SELECT CUSTOMER_NAME FROM CUSTOMER WHERE REG_DATE < 2022-01-01 AND 
    CUSTOMER_ID NOT IN (SELECT ISSUED_CUST FROM ISSUESTATUS); 
    
    -- 7. Display the branch numbers and the total count of employees in each branch. 
    SELECT B.BRANCH_NO , COUNT(E.EMP_ID) AS TOTAL_EMPLOYEES FROM BRANCH B
    LEFT JOIN EMPLOYEE E ON B.BRANCH_NO = E.BRANCH_NO GROUP BY B.BRANCH_NO;
    
    -- Display the names of customers who have issued books in the month of June 2024
    SELECT C.CUSTOMER_NAME FROM CUSTOMER C JOIN ISSUESTATUS I ON CUSTOMER_ID = I.ISSUED_CUST
    WHERE YEAR(I.ISSUE_DATE) = 2024 AND MONTH (I.ISSUE_DATE)= 6;
    
    -- 9. Retrieve book_title from book table containing history. 
    SELECT BOOK_TITLE FROM BOOKS WHERE CATEGORY = 'HISTORY';
    SELECT BOOK_TITLE FROM BOOKS WHERE CATEGORY = 'MYSTERY';
    
    -- 10.Retrieve the branch numbers along with the count of employees for branches having more than 5 employees
    SELECT BRANCH.BRANCH_NO, COUNT(EMPLOYEE.EMP_ID) AS TOTAL_EMPLOYEES FROM BRANCH
    LEFT JOIN EMPLOYEE ON BRANCH.BRANCH_NO = EMPLOYEE.BRANCH_NO GROUP BY BRANCH_NO
    HAVING COUNT(EMPLOYEE.EMP_ID) >5;
    
    
    
    -- 11. Retrieve the names of employees who manage branches and their respective branch addresses.
    SELECT EMPLOYEE.EMP_NAME AS NAME_OF_EMPLOYEES, BRANCH.BRANCH_ADDRESS FROM EMPLOYEE 
    JOIN BRANCH ON EMPLOYEE.BRANCH_NO = BRANCH.BRANCH_NO 
    WHERE  EMPLOYEE.EMP_ID = BRANCH.MANAGER_ID GROUP BY EMP_ID;
    
    -- 12.  Display the names of customers who have issued books with a rental price higher than Rs. 10.
    SELECT C.CUSTOMER_NAME AS _NAMES_OF_CUSTOMERS FROM CUSTOMER C
    JOIN ISSUESTATUS I ON C.CUSTOMER_ID=I.ISSUED_CUST 
    JOIN BOOKS B  ON I.ISBN_BOOK = B.ISBN
    WHERE B.RENTAL_PRICE >10;
    
    
    --    THE END ---
    
    
    